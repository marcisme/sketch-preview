// Preview file in Skala Preview (cmd p)

// Copyright (c) 2013 Marc Schwieterman
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.


#import 'lib/common.js'

// configuration

var PREVIEW_APPLICATION = "Skala Preview"
var PREVIEW_TARGET_NAME = "Preview"

var PREVIEW_DIRECTORY_NAME = "com.marcisme.sketch-preview"
var PREVIEW_FILE_NAME = "preview.png"
var config = new Config()

// preview functions

function preview() {
  if (!isSupportedVersion()) {
    [doc showMessage:"Sketch 2 is no longer supported"]
    return
  }
  var previewTarget = findPreviewTarget()
  if (previewTarget) {
    writeAndOpenPreviewFile(previewTarget)
  }
  else {
    [doc showMessage:"The Preview plugin requires a selected Artboard or a slice named '" + PREVIEW_TARGET_NAME + "'"]
  }
}

function findPreviewTarget() {
  return findNamedPreviewTarget() || findSelectedPreviewTarget()
}

function findSelectedPreviewTarget() {
  debug("Searching for selected Artboard")
  var currentArtboard = [[doc currentPage] currentArtboard]
  if (currentArtboard) {
    debug("Found selected Artboard: " + [currentArtboard name])
  }
  else {
    debug("No Artboard selected")
  }
  return currentArtboard
}

function findNamedPreviewTarget() {
  debug("Searching for named preview slice: " + PREVIEW_TARGET_NAME)
  var targets = allTargets()
  for (var i = 0; i < [targets count]; i++) {
    var target = targets[i]
    if (isPreviewTarget([target name])) {
      debug("Found named preview slice")
      return target
    }
  }
  debug("No named preview slice found")
}

function allTargets() {
  if (isSupportedVersion()) {
    // Sketch 3
    return [[doc currentPage] exportableLayers]
  } else {
    error("Unable to search for target slice; Sketch implementation may have changed")
    // Return empty array, so we move on to the next strategy
    return [NSArray new]
  }
}

function isPreviewTarget(name) {
  return [name localizedCaseInsensitiveCompare:PREVIEW_TARGET_NAME] == NSOrderedSame
}

function writeAndOpenPreviewFile(previewTarget) {
  var previewFilePath = getPreviewFilePath()
  debug("writing preview image to: " + previewFilePath)
  [doc saveArtboardOrSlice:resizedPreviewTarget(previewTarget) toFile:previewFilePath]
  openPreviewFile(previewFilePath)
}

function resizedPreviewTarget(layer) {
  var rect = [[layer absoluteRect] rect]
  var size = config.getScalingStrategy().sizeForRect(rect)
  debug("preview scale factor: " + size)
  return [MSExportRequest requestWithRect:rect scale:size]
}

function getPreviewFilePath() {
  return getPreviewDirectory() + "/" + PREVIEW_FILE_NAME
}

function getPreviewDirectory() {
  var fileManager = [NSFileManager defaultManager]
  var cachesURL = [[fileManager URLsForDirectory:NSCachesDirectory inDomains:NSUserDomainMask] lastObject]
  return [[cachesURL URLByAppendingPathComponent:PREVIEW_DIRECTORY_NAME] path]
}

function openPreviewFile(previewFilePath) {
  if(![[NSWorkspace sharedWorkspace] openFile:previewFilePath withApplication:PREVIEW_APPLICATION options:NSWorkspaceLaunchAndHide andDeactivate:false]]) {
    [doc showMessage:"Failed to open preview file; Make sure '" + PREVIEW_APPLICATION + "' is installed."]
  }
}

preview()

